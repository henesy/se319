package lab01;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.nio.file.Files;
import java.util.Scanner;

public class client {
	private String name;
	private boolean textMode;
	
	public client() {
		name = "nil";
		textMode = true;
	}
	
	public void start() throws UnknownHostException,
	IOException {
	
	Scanner in = new Scanner(System.in);
	System.out.print("Desired name?: ");
	name = in.nextLine();
	System.out.println("Using username " + name);
		
	// 1. CONNECT TO THE SERVER AT PORT 4444 
	Socket socket = new Socket("localhost", 4444);
	printSocketInfo(socket);
	
	
	//!!! need thread to read and print (Even if typing)
	
	Thread t = new Thread(new ServerHandler(socket, name));
	t.start();
	
	String input = null;
	PrintWriter out = new PrintWriter(new BufferedOutputStream(socket.getOutputStream()));
	
	//file send stuff
	ObjectOutputStream fout = new ObjectOutputStream(new BufferedOutputStream(socket.getOutputStream()));
	File file = null;
	//fin.writeObject(file);
	
	out.println(name);
	
	while(true) {
		//System.out.print("[" + name +  "]" + "> ");
		System.out.println("Enter one of the following (int)...\n1. send text\n2. send image file");
		input = in.nextLine();
		int sel = 1;
		Scanner tmp = new Scanner(input);
		if(tmp.hasNextInt())
			sel = tmp.nextInt();
		//int sel = in.nextInt();
		if(sel != 2)
			input = in.nextLine();
		
		if(sel == 2)
			textMode = false;
		else
			textMode = true;	
		
		if(input.compareTo("!quit") == 0)
			break;
		
		if(input.contains("!file") || sel == 2) {
			//enter file mode
			System.out.println("Entered FILE mode!");
			out.println("!file");
			textMode = false;
		} else if(input.contains("!text")) {
			//enter text mode 
			System.out.println("Entered TEXT mode!");
			out.println("!text");
			textMode = true;
		} else {
			//write text or file, depending
			if(textMode)
				out.println(input);
			else {
				//attempt to open file from path
				file = new File(input);
				System.out.println("Sending " + file.getName());
				byte[] ofile = Files.readAllBytes(file.toPath());
				fout.writeObject(file);
				fout.writeObject(ofile);
				fout.flush();
				textMode = true;
			}
		}
		out.flush();
	}
	
	System.out.println("Goodbye!");
	/*
	// 2. WRITE A MESSAGE TO THE SOCKET TO SEND TO THE SERVER
	PrintWriter out = new PrintWriter(new BufferedOutputStream(socket.getOutputStream()));
	out.print("Client socket Local Address: " + socket.getLocalAddress() + ":" + socket.getLocalPort());
	out.println("  Client socket Remote Address: " + socket.getRemoteSocketAddress());
	out.flush(); // forces data from buffer to be sent to server
	*/
	
	// client dies here
	
	}
	
	static void printSocketInfo(Socket s) {
	System.out.print("Socket on Client Side: ");
	System.out.print("Local Address: " + s.getLocalAddress() + ":"
			+ s.getLocalPort());
	System.out.println("  Remote Address: " + s.getRemoteSocketAddress());
	}
}

class ServerHandler implements Runnable {
	private Socket socket;
	private String name;
	
	public ServerHandler(Socket s, String n) {
		socket = s;
		name = n;
	}
	
	public synchronized void run() {
		boolean textMode = true;
		boolean first = true;
		int imageCount = 0;
		System.out.println("Entered the read loop!");
		while(true) {
			Scanner in = null;
				if(textMode) {
					try {
						in = new Scanner(new BufferedInputStream(socket.getInputStream()));
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					} 
					if(first) {
						in.nextLine();
						first = false;
					}
					if(in.hasNextLine()) {
						String b = in.nextLine();
						System.out.println(b);
						if(b.contains("FILE") && !b.contains(name))
							textMode = false;
					}
					try {
						Thread.sleep(100);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				} else {
					System.out.println("Waiting to read a file...");
					ObjectInputStream fin = null;
					try {
						fin = new ObjectInputStream(new BufferedInputStream(socket.getInputStream()));
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					byte[] ifile = null;
					File ifileName = null;
					try {
						ifileName = (File) fin.readObject();
						ifile = (byte[]) fin.readObject();
					} catch (ClassNotFoundException | IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					File file = new File("./image" + imageCount + ".jpg");
					imageCount++;
					try {
						Files.write(file.toPath(), ifile);
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					 
					System.out.println("Got file: " + file.getName() + " at: " + file.getAbsolutePath());
					
					textMode = true;
				}
		}
	}
}
